#Three Number Sum
#Write a function that takes in a non empty array of distinct integers and an integer 
#representing a target sum. 
#The function should find a list of triplets in the array that sum upto the target sum and
#return a two-dimensional array of all the these triplets.
#The numbers in each triplet should be order in ascending order, and the triplets themselves 
#should be ordered in ascending order with respect to the numbers they hold.

#If no three numbers sum up to the target sum, the function should return an empty array.



import numpy as np
def ThreeNumberSum(array,targetsum):
    List_num=[]
    for i in range(0,len(array)-2):
        for j in range(i+1,len(array)-1):
            for k in range(j+1,len(array)):
                if array[i]+array[j]+array[k]==targetsum:
                    List_num.extend([array[i],array[j],array[k]])
                    break
    List_num1=np.array(List_num).reshape(int(len(List_num)/3),3)
    List_num1.sort()
    
    return List_num1
if __name__ == '__main__':
  array =  [12,2,1,3,-6,5,-8,6]
  targetSum = 0
  print(ThreeNumberSum(array, targetSum))
